---
- set_fact: outer_loop="{{ item }}"

- include_tasks: build_gce_disks.yml

- name: Wait for {{ outer_loop.host_group }} disk(s) to be created
  async_status:
    jid: "{{ local_loop.ansible_job_id }}"
  loop_control:
    loop_var: local_loop
  with_items: "{{ current_disks_async.results }}"
  register: current_disks
  until: current_disks.finished
  retries: 120

- name: Create {{ outer_loop.host_group }} node(s)
  gce:
    zone: "{{ cloud_config.zone }}"
    name: "{{ cluster_name }}-{{ outer_loop.host_group }}{{ (outer_loop.count > 1) | ternary(local_loop,'') }}{{ cloud_config.name_suffix|default('') }}"
    image: "{{ outer_loop.image }}"
    machine_type: "{{ outer_loop.type }}"
    network: "{{ cloud_config.vpc_name }}"
    subnetwork: "{{ cloud_config.subnet_name }}"
    external_ip: "{{ (outer_loop.public_ip|default(false)|bool == true) | ternary('ephemeral','none') }}"
    disks:
      - "{{ cluster_name }}-{{ outer_loop.host_group }}{{ (outer_loop.count > 1) | ternary(local_loop,'') }}-os"
      - name: "{{ cluster_name }}-{{ outer_loop.host_group }}{{ (outer_loop.count > 1) | ternary(local_loop,'') }}-data"
        mode: READ_WRITE
    tags:
      - "cluster-{{ cluster_name }}"
      - "role-{{ outer_loop.host_group }}"
      - "group-{{ cluster_name }}-{{ outer_loop.host_group }}"
    state: present
  loop_control:
    loop_var: local_loop
  with_sequence: count="{{ outer_loop.count }}" format=-%02x
  async: 1000
  poll: 0
  register: current_nodes_async

- name: Wait for {{ outer_loop.host_group }} node(s) to be built
  async_status:
    jid: "{{ local_loop.ansible_job_id }}"
  loop_control:
    loop_var: local_loop
  with_items: "{{ current_nodes_async.results }}"
  register: current_nodes
  until: current_nodes.finished
  retries: 120

- name: Wait for SSH to start
  wait_for:
    host: "{{ (outer_loop.public_ip|default(false) == true) | ternary(local_loop.instance_data.0.public_ip,local_loop.instance_data.0.private_ip) }}"
    port: 22
    state: started
    delay: 5
    timeout: 300
  loop_control:
    loop_var: local_loop
  with_items: '{{ current_nodes.results }}'

- include_tasks: prepare_data_disks.yml
